name: Coverage Report

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: optipy_db_test
          POSTGRES_USER: optipy_db_test_user
          POSTGRES_PASSWORD: optipy_db_test_123
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt

      - name: Create env files
        run: |
          touch .env.test
          touch .env
          echo 'DB_USER="optipy_db_test_user"' >> .env.test
          echo 'DB_PASS="optipy_db_test_123"' >> .env.test
          echo 'DB_NAME="optipy_db_test"' >> .env.test
          echo 'DB_HOST="localhost"' >> .env.test
          echo 'DB_PORT=5432' >> .env.test
          echo '' >> .env.test
          echo 'AUTH0_DOMAIN="test.eu.auth0.com"' >> .env.test
          echo 'AUTH0_API_AUDIENCE="https://auth0.optipy.app"' >> .env.test
          echo 'AUTH0_ALGORITHMS="RS256"' >> .env.test
          echo 'AUTH0_ISSUER="https://test.eu.auth0.com/"' >> .env.test
          echo '' >> .env.test
          echo 'AWS_URL="http://localhost:4566"' >> .env.test
          echo 'AWS_ACCESS_KEY_ID="local-aws-key"' >> .env.test
          echo 'AWS_SECRET_ACCESS_KEY="local-secret-key"' >> .env.test
          echo 'AWS_REGION_NAME="eu-north-1"' >> .env.test
          echo 'DB_USER="optipy_db_test_user"' >> .env
          echo 'DB_PASS="optipy_db_test_123"' >> .env
          echo 'DB_NAME="optipy_db_test"' >> .env
          echo 'DB_HOST="localhost"' >> .env
          echo 'DB_PORT=5432' >> .env
          echo '' >> .env
          echo 'AUTH0_DOMAIN="test.eu.auth0.com"' >> .env
          echo 'AUTH0_API_AUDIENCE="https://auth0.optipy.app"' >> .env
          echo 'AUTH0_ALGORITHMS="RS256"' >> .env
          echo 'AUTH0_ISSUER="https://test.eu.auth0.com/"' >> .env
          echo '' >> .env
          echo 'AWS_URL="http://localhost:4566"' >> .env
          echo 'AWS_ACCESS_KEY_ID="local-aws-key"' >> .env
          echo 'AWS_SECRET_ACCESS_KEY="local-secret-key"' >> .env
          echo 'AWS_REGION_NAME="eu-north-1"' >> .env

      - name: Install and run AWS LocalStack
        run: |
          pip install localstack
          docker pull localstack/localstack
          localstack start -d

          echo "Waiting for LocalStack to startup..."
          localstack wait -t 30
          echo "LocalStack startup complete"
          
      - name: Run tests & collect coverage
        run: |
          coverage run -m pytest
          coverage xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}